{"version":3,"sources":["components/Login.js","components/Register.js","components/Stats.js","components/useInterval.js","assets/sounds/alarm_sound.mp3","components/MainApp/Timer.js","components/MainApp/ControlButtons.js","components/MainApp/ControlInput.js","components/MainApp/TextInputs.js","assets/sounds/click.mp3","components/MainSection.js","App.js","reportWebVitals.js","index.js"],"names":["formReducer","state","event","name","value","Login","stateToRegister","stateToStats","useReducer","formData","setFormData","useState","errorMessage","setErrorMessage","useEffect","document","cookie","handleChange","target","className","Form","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","status","json","msg","userData","username","console","log","catch","error","Group","controlId","Label","Control","onChange","type","placeholder","style","position","Button","variant","boxShadow","onClick","bottom","right","color","Register","stateToLogin","showProblem","setShowProblem","problemText","setProblemText","password","email","text","message","search","renderTime","number","toString","renderHours","hourString","Stats","stats","setStats","problemPresent","setProblemPresent","isMounted","res","resJSON","pomoToday","Math","floor","secToday","pomoWeek","secWeek","pomoMonth","secMonth","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","Timer","isRunning","resetTimer","resetValue","resetedFunc","sessionOver","setSessionOver","mode","minutes","seconds","setMinutes","setSeconds","alarmSound","play","titleString","title","Audio","alarmFile","ControlButtons","updateState","sessionState","resetContinue","setResetContinue","controlText","setControlText","setControlState","newState","border","ControlInput","changeMode","radioName","inputName","inputValue","setInputValue","inputChecked","invalidInput","setInvalidInput","width","display","checked","e","inputNumber","Number","isNaN","isInteger","validAndSaveInput","size","TextInputs","setNextTimer","setResetTimer","checkTextInput","setCheckTextInput","pomodoroText","setPomodoroText","breakText","setBreakText","longBreakText","setLongBreakText","pomodoro","break","longBreak","radioValues","setRadioValues","invalidPomoInput","setInvalidPomoInput","invalidBreakInput","setInvalidBreakInput","invalidLongInput","setInvalidLongInput","parseInt","MainApp","userState","nextMinutes","setNextMinutes","setMode","isTimerRunning","setIsTimerRunning","setSessionState","cycles","setCycles","modeLabel","setModeLabel","clickSound","clickFile","updateTodayStats","newSeconds","newPomodoro","textPomodoro","time","checkNextForSession","defineModeLabel","Container","fluid","Row","Col","md","offset","newMode","App","setUserState","userName","setUserName","xl","marginTop","MainSection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fbdbddd4.chunk.js","sourcesContent":["import React, { useReducer, useState, useEffect } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst formReducer = (state, event) => {\r\n  return {\r\n    ...state,\r\n    [event.name]: event.value,\r\n  };\r\n};\r\n\r\nconst Login = ({ stateToRegister, stateToStats }) => {\r\n  const [formData, setFormData] = useReducer(formReducer, {});\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (document.cookie) {\r\n      stateToStats();\r\n    }\r\n  });\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    fetch(\"/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      //Check response and set error message or stats component\r\n      .then((response) => {\r\n        if (response.status !== 500) {\r\n          return response.json();\r\n        } else {\r\n          return { msg: \"Sorry couldn't log in\" };\r\n        }\r\n      })\r\n      .then((userData) => {\r\n        //If username present in the response, the log in was sucessful\r\n        if (userData.username) {\r\n          console.log(\r\n            \"🚀 ~ file: Login.js ~ line 27 ~ userData.msg\",\r\n            userData.msg\r\n          );\r\n          stateToStats();\r\n          setErrorMessage(\"\");\r\n        } else {\r\n          setErrorMessage(userData.msg);\r\n        }\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      name: event.target.name,\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"mb-4\">Login</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"EmailUsername\">\r\n          <Form.Label>Username/Email</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            value={formData.username}\r\n            name=\"user_id\"\r\n            type=\"text\"\r\n            placeholder=\"Enter username or email\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"LoginPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            value={formData.username}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </Form.Group>\r\n        <p className=\"text-danger font-weight-bold\">{errorMessage}</p>\r\n        <div style={{ position: \"relative\" }}>\r\n          <Button variant=\"primary\" type=\"submit\" style={{ boxShadow: \"none\" }}>\r\n            Login\r\n          </Button>\r\n          <Button\r\n            variant=\"link\"\r\n            onClick={stateToRegister}\r\n            style={{\r\n              boxShadow: \"none\",\r\n              position: \"absolute\",\r\n              bottom: -10,\r\n              right: 0,\r\n              color: \"darkslategray\",\r\n            }}\r\n          >\r\n            Register\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useState, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, event) => {\r\n  return {\r\n    ...state,\r\n    [event.name]: event.value,\r\n  };\r\n};\r\n\r\nconst Register = ({ stateToStats, stateToLogin }) => {\r\n  const [formData, setFormData] = useReducer(formReducer, {});\r\n  const [showProblem, setShowProblem] = useState(false);\r\n  const [problemText, setProblemText] = useState(\"\");\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (formData.password && formData.username && formData.email) {\r\n      fetch(\"/register\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n      })\r\n        .then((response) => response.text())\r\n        .then((message) => {\r\n          if (message === \"User registered.\") {\r\n            console.log(\"🚀 ~ file: Register.js ~ line 28 ~ message\", message);\r\n            setShowProblem(false);\r\n            stateToStats();\r\n          } else {\r\n            console.log(\"🚀 ~ file: Register.js ~ line 28 ~ message\", message);\r\n            //Check if the error was related to unique rule.\r\n            if (message.search(/unique/) > -1) {\r\n              setProblemText(\"Username or email already exists.\");\r\n            } else {\r\n              setProblemText(message);\r\n            }\r\n            setShowProblem(true);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"🚀 ~ file: Register.js ~ line 35 ~ error\", error);\r\n          setShowProblem(true);\r\n        });\r\n    } else {\r\n      setProblemText(\"Missing field in register form.\");\r\n      setShowProblem(true);\r\n    }\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      name: event.target.name,\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"mb-4\">Register</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"Username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            value={formData.username}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Type a username\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"Email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            value={formData.email}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Type your email\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"Password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            value={formData.password}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Type a password\"\r\n          />\r\n        </Form.Group>\r\n        {showProblem && (\r\n          <p className=\"text-danger font-weight-bold\">{problemText}</p>\r\n        )}\r\n        <div style={{ position: \"relative\" }}>\r\n          <Button variant=\"primary\" type=\"submit\" style={{ boxShadow: \"none\" }}>\r\n            Register\r\n          </Button>\r\n          <Button\r\n            variant=\"link\"\r\n            onClick={stateToLogin}\r\n            style={{\r\n              boxShadow: \"none\",\r\n              position: \"absolute\",\r\n              bottom: -10,\r\n              right: 0,\r\n              color: \"darkslategray\",\r\n            }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n//Render minutes and seconds\r\nconst renderTime = (number) => {\r\n  let numString = \"\";\r\n  if (number < 10) {\r\n    numString = \"0\" + number.toString();\r\n  } else {\r\n    numString = number.toString();\r\n  }\r\n  return numString;\r\n};\r\n\r\nconst renderHours = (number) => {\r\n  let hourString = \"\";\r\n  if (number > 0) {\r\n    hourString = number.toString() + \":\";\r\n  }\r\n  return hourString;\r\n};\r\n\r\nconst Stats = ({ stats, stateToLogin, setStats }) => {\r\n  const [problemText, setProblemText] = useState(\"\");\r\n  const [problemPresent, setProblemPresent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    fetch(\"/main-stats\")\r\n      .then((res) => res.json())\r\n      .then((resJSON) => {\r\n        if (isMounted) {\r\n          setStats(() => resJSON);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setProblemText(\"Sorry. There was a problem getting the stats.\");\r\n        setProblemPresent(true);\r\n      });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    fetch(\"/logout\", {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => response.text())\r\n      .then((message) => {\r\n        if (message === \"Session finished.\") {\r\n          setProblemText(\"\");\r\n          setProblemPresent(false);\r\n          stateToLogin();\r\n        } else {\r\n          setProblemPresent(true);\r\n          setProblemText(\"Sorry. Couldn't log out.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setProblemPresent(true);\r\n        setProblemText(\"Sorry. Couldn't log out.\");\r\n        console.error(\r\n          \"🚀 ~ file: Register.js ~ line 35 ~ error\",\r\n          error.message\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"mb-1 mt-xl-5\">Stats</h2>\r\n      {!problemPresent && stats.username ? <h3 className=\"mb-5\">Hello, {stats.username}.</h3> : null}\r\n      <p className=\"text-danger font-weight-bold\">\r\n        {problemPresent ? problemText : \"\"}\r\n      </p>\r\n      <h4>Today.</h4>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Pomodoros: </span>\r\n        <span>{stats.pomoToday}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Time: </span>\r\n        <span>\r\n          {/* Display hours:minutes:seconds */}\r\n          {renderHours(Math.floor(stats.secToday / 3600))}\r\n          {renderTime(Math.floor((stats.secToday / 60) % 60))}:\r\n          {renderTime(Math.floor(stats.secToday % 60))}\r\n        </span>\r\n      </div>\r\n      <h4 className=\"mt-3\">This week.</h4>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Pomodoros: </span>\r\n        <span>{stats.pomoWeek}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Time: </span>\r\n        <span>\r\n          {renderHours(Math.floor(stats.secWeek / 3600))}\r\n          {renderTime(Math.floor((stats.secWeek / 60) % 60))}:\r\n          {renderTime(Math.floor(stats.secWeek % 60))}\r\n        </span>\r\n      </div>\r\n      <h4 className=\"mt-3\">This month.</h4>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Pomodoros: </span>\r\n        <span>{stats.pomoMonth}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Time: </span>\r\n        <span>\r\n          {renderHours(Math.floor(stats.secMonth / 3600))}\r\n          {renderTime(Math.floor((stats.secMonth / 60) % 60))}:\r\n          {renderTime(Math.floor(stats.secMonth % 60))}\r\n        </span>\r\n      </div>\r\n      <Button\r\n        variant=\"outline-secondary\"\r\n        className=\"btn-sm mt-3 float-right\"\r\n        style={{ boxShadow: \"none\" }}\r\n        onClick={logout}\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval;\r\n","export default __webpack_public_path__ + \"static/media/alarm_sound.b2009aa7.mp3\";","import useInterval from \"../useInterval\";\r\nimport { useEffect } from \"react\";\r\nimport alarmFile from \"../../assets/sounds/alarm_sound.mp3\";\r\n\r\nconst Timer = ({\r\n  isRunning,\r\n  resetTimer,\r\n  resetValue,\r\n  resetedFunc,\r\n  sessionOver,\r\n  setSessionOver,\r\n  mode,\r\n  minutes,\r\n  seconds,\r\n  setMinutes,\r\n  setSeconds,\r\n}) => {\r\n  useInterval(updateTimer, isRunning ? 1000 : null);\r\n\r\n  //Update page title with session name and time\r\n  useEffect(() => {\r\n    let titleString = ``;\r\n    if (!sessionOver) {\r\n      switch (mode) {\r\n        case \"pomodoro\":\r\n          titleString += \"Pomodoro - \";\r\n          break;\r\n        case \"break\":\r\n          titleString += \"Break - \";\r\n          break;\r\n        case \"long-break\":\r\n          titleString += \"Long Break - \";\r\n          break;\r\n        default:\r\n      }\r\n    } else {\r\n      titleString += \"Extra - \";\r\n    }\r\n    document.title =\r\n      titleString + `${renderTime(minutes)}:${renderTime(seconds)}`;\r\n    // eslint-disable-next-line\r\n  }, [minutes, seconds, mode]);\r\n\r\n  // If resetTimer flag set, reset timer and clear flag\r\n  useEffect(() => {\r\n    if (resetTimer) {\r\n      setMinutes(resetValue);\r\n      setSeconds(0);\r\n      resetedFunc();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [resetTimer]);\r\n\r\n  const alarmSound = new Audio(alarmFile);\r\n\r\n  // Update timer function for normal section and extra section.\r\n  function updateTimer() {\r\n    if (!sessionOver) {\r\n      if (seconds > 0) {\r\n        setSeconds((seconds) => seconds - 1);\r\n      } else if (minutes > 0) {\r\n        setSeconds(59);\r\n        setMinutes((minutes) => minutes - 1);\r\n      } else {\r\n        console.log(\"Setting extra state\");\r\n        setSessionOver(true);\r\n        alarmSound.play();\r\n      }\r\n      //Update minutes and secods if session ended.\r\n    } else {\r\n      if (seconds < 59) {\r\n        setSeconds(seconds + 1);\r\n      } else if (minutes < 60) {\r\n        setSeconds(0);\r\n        setMinutes(minutes + 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  const renderTime = (number) => {\r\n    let numString = \"\";\r\n    if (number < 10) {\r\n      numString = \"0\" + number.toString();\r\n    } else {\r\n      numString = number.toString();\r\n    }\r\n    return numString;\r\n  };\r\n\r\n  return (\r\n    <div className=\"display-2 font-weight-bold mb-2\">\r\n      {renderTime(minutes)}:{renderTime(seconds)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// TO-DO Fix Stop/Continue Button\r\n\r\nfunction ControlButtons({\r\n  updateState,\r\n  sessionState,\r\n  resetContinue,\r\n  setResetContinue,\r\n}) {\r\n  const [controlText, setControlText] = useState(\"Stop\");\r\n\r\n  useEffect(() => {\r\n    if (resetContinue) {\r\n      setControlText(\"Stop\");\r\n      setResetContinue(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [resetContinue]);\r\n\r\n  // Change state of control button\r\n  const setControlState = (newState) => {\r\n    if (sessionState !== \"wait\") {\r\n      setControlText(newState);\r\n      if (newState === \"Continue\") {\r\n        updateState(\"stop\");\r\n      } else {\r\n        updateState(\"continue\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ml-3\">\r\n      <Button\r\n        variant=\"secondary\"\r\n        className=\"mr-2\"\r\n        style={{ border: \"1px solid black\", boxShadow: \"none\" }}\r\n        onClick={() => updateState(\"run\")}\r\n      >\r\n        {\" \"}\r\n        Start\r\n      </Button>\r\n      <Button\r\n        variant=\"secondary\"\r\n        className=\"mr-2\"\r\n        style={{ border: \"1px solid black\", boxShadow: \"none\" }}\r\n        onClick={() =>\r\n          controlText === \"Stop\"\r\n            ? setControlState(\"Continue\")\r\n            : setControlState(\"Stop\")\r\n        }\r\n      >\r\n        {controlText}\r\n      </Button>\r\n      <Button\r\n        variant=\"secondary\"\r\n        className=\"mr-2\"\r\n        style={{ border: \"1px solid black\", boxShadow: \"none\" }}\r\n        onClick={() => updateState(\"wait\")}\r\n      >\r\n        End\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlButtons;\r\n","function ControlInput({\r\n  changeMode,\r\n  radioName,\r\n  inputName,\r\n  inputValue,\r\n  setInputValue,\r\n  inputChecked,\r\n  invalidInput,\r\n  setInvalidInput,\r\n}) {\r\n  //Determine if input is valid when input is active.\r\n  const validAndSaveInput = (e) => {\r\n    if (inputChecked) {\r\n      let inputNumber = Number(e.target.value);\r\n      if (isNaN(inputNumber)) {\r\n        setInvalidInput(true);\r\n        //Check if in range and number is integer\r\n      } else if (inputNumber > 0 && inputNumber < 60) {\r\n        if (Number.isInteger(inputNumber)) {\r\n          setInvalidInput(false);\r\n        } else {\r\n          setInvalidInput(true);\r\n        }\r\n      } else {\r\n        setInvalidInput(true);\r\n      }\r\n      setInputValue(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <span style={{ width: \"110px\", display: \"inline-block\" }}>\r\n        <input\r\n          type=\"radio\"\r\n          className=\"mr-1\"\r\n          id={radioName}\r\n          name=\"session-type\"\r\n          value={radioName}\r\n          onClick={() => changeMode(radioName)}\r\n          checked={inputChecked}\r\n        ></input>\r\n        <label className=\"input-label\">{inputName}</label>\r\n      </span>\r\n      <input\r\n        className=\"input-field\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={(e) => validAndSaveInput(e)}\r\n        size=\"5\"\r\n      />\r\n      <span> min</span>\r\n      {invalidInput ? (\r\n        <span className=\"ml-2 text-danger font-weight-bold\">Invalid Input</span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlInput;\r\n","import React from \"react\";\r\nimport ControlInput from \"./ControlInput\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction TextInputs({\r\n  changeMode,\r\n  mode,\r\n  setNextTimer,\r\n  setResetTimer,\r\n  checkTextInput,\r\n  setCheckTextInput,\r\n}) {\r\n  const [pomodoroText, setPomodoroText] = useState(\"25\");\r\n  const [breakText, setBreakText] = useState(\"5\");\r\n  const [longBreakText, setLongBreakText] = useState(\"15\");\r\n  const [radioValues, setRadioValues] = useState({\r\n    pomodoro: true,\r\n    break: false,\r\n    longBreak: false,\r\n  });\r\n  const [invalidPomoInput, setInvalidPomoInput] = useState(false);\r\n  const [invalidBreakInput, setInvalidBreakInput] = useState(false);\r\n  const [invalidLongInput, setInvalidLongInput] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //If mode is updated by program change radio input selected.\r\n    switch (mode) {\r\n      case \"pomodoro\":\r\n        setRadioValues({ pomodoro: true, break: false, longBreak: false });\r\n        if (invalidPomoInput) {\r\n          setNextTimer(25);\r\n        } else {\r\n          setNextTimer(parseInt(pomodoroText));\r\n        }\r\n        break;\r\n      case \"break\":\r\n        setRadioValues({ pomodoro: false, break: true, longBreak: false });\r\n        if (invalidBreakInput) {\r\n          setNextTimer(5);\r\n        } else {\r\n          setNextTimer(parseInt(breakText));\r\n        }\r\n        break;\r\n      case \"long-break\":\r\n        setRadioValues({ pomodoro: false, break: false, longBreak: true });\r\n        if (invalidLongInput) {\r\n          setNextTimer(15);\r\n        } else {\r\n          setNextTimer(parseInt(longBreakText));\r\n        }\r\n        break;\r\n      default:\r\n    }\r\n    setCheckTextInput(false);\r\n    if (checkTextInput) {\r\n      setResetTimer(true);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [mode, checkTextInput]);\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <ControlInput\r\n        changeMode={changeMode}\r\n        radioName=\"pomodoro\"\r\n        inputName=\"Pomodoro\"\r\n        inputValue={pomodoroText}\r\n        setInputValue={setPomodoroText}\r\n        inputChecked={radioValues.pomodoro}\r\n        invalidInput={invalidPomoInput}\r\n        setInvalidInput={setInvalidPomoInput}\r\n      />\r\n      <ControlInput\r\n        changeMode={changeMode}\r\n        radioName=\"break\"\r\n        inputName=\"Break\"\r\n        inputValue={breakText}\r\n        setInputValue={setBreakText}\r\n        inputChecked={radioValues.break}\r\n        invalidInput={invalidBreakInput}\r\n        setInvalidInput={setInvalidBreakInput}\r\n      />\r\n      <ControlInput\r\n        changeMode={changeMode}\r\n        radioName=\"long-break\"\r\n        inputName=\"Long Break\"\r\n        inputValue={longBreakText}\r\n        setInputValue={setLongBreakText}\r\n        inputChecked={radioValues.longBreak}\r\n        invalidInput={invalidLongInput}\r\n        setInvalidInput={setInvalidLongInput}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextInputs;\r\n","export default __webpack_public_path__ + \"static/media/click.07b2086f.mp3\";","import Timer from \"./MainApp/Timer\";\r\nimport ControlButtons from \"./MainApp/ControlButtons\";\r\nimport TextInputs from \"./MainApp/TextInputs\";\r\nimport { useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport clickFile from \"../assets/sounds/click.mp3\";\r\n\r\nfunction MainApp({\r\n  userState,\r\n  minutes,\r\n  seconds,\r\n  setMinutes,\r\n  setSeconds,\r\n  stats,\r\n  setStats,\r\n}) {\r\n  const [nextMinutes, setNextMinutes] = useState(25);\r\n  const [mode, setMode] = useState(\"pomodoro\");\r\n  const [resetTimer, setResetTimer] = useState(true);\r\n  const [checkTextInput, setCheckTextInput] = useState(false);\r\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  const [sessionState, setSessionState] = useState(\"wait\");\r\n  const [sessionOver, setSessionOver] = useState(false);\r\n  const [cycles, setCycles] = useState(0);\r\n  const [resetContinue, setResetContinue] = useState(false);\r\n  const [modeLabel, setModeLabel] = useState(\"Pomodoro\");\r\n  const clickSound = new Audio(clickFile);\r\n\r\n  // Update session mode and next initial time.\r\n\r\n  const changeMode = (newMode) => {\r\n    if (sessionState === \"wait\") {\r\n      setMode(newMode);\r\n      defineModeLabel(newMode);\r\n    }\r\n  };\r\n\r\n  // Change sessionState according to new state\r\n\r\n  const changeTimerState = (newState) => {\r\n    switch (newState) {\r\n      case \"run\":\r\n        if (sessionState === \"wait\") {\r\n          setCheckTextInput(true);\r\n          setIsTimerRunning(true);\r\n          setSessionState(newState);\r\n          clickSound.play();\r\n        }\r\n        break;\r\n      case \"continue\":\r\n        if (sessionState === \"stop\") {\r\n          setIsTimerRunning(true);\r\n          setSessionState(newState);\r\n          clickSound.play();\r\n        }\r\n        break;\r\n      case \"stop\":\r\n        if (sessionState === \"run\" || sessionState === \"continue\") {\r\n          setIsTimerRunning(false);\r\n          setSessionState(newState);\r\n          clickSound.play();\r\n        }\r\n        break;\r\n      case \"wait\":\r\n        if (sessionState !== \"wait\") {\r\n          setIsTimerRunning(false);\r\n          if (sessionState === \"stop\") {\r\n            setResetContinue(true);\r\n          }\r\n\r\n          //Update today stats and save it to backend.\r\n          if (userState === \"stats\" && mode === \"pomodoro\") {\r\n            updateTodayStats();\r\n          }\r\n\r\n          //Check if a session change is necessary\r\n          if (sessionOver || mode !== \"pomodoro\") {\r\n            checkNextForSession();\r\n          }\r\n          setCheckTextInput(true);\r\n          clickSound.play();\r\n          setSessionState(newState);\r\n        }\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const updateTodayStats = () => {\r\n    let newSeconds = 0;\r\n    let newPomodoro = 0;\r\n\r\n    //Calculate new seconds to adding depending if session was in extra or not.\r\n    if (sessionOver) {\r\n      newSeconds = (nextMinutes + minutes) * 60 + seconds;\r\n      newPomodoro = 1;\r\n    } else {\r\n      newSeconds = (nextMinutes - minutes - 1) * 60 + (60 - seconds);\r\n    }\r\n\r\n    //Update stats state adding new data\r\n    setStats({...stats, \r\n      secToday: stats.secToday + newSeconds,\r\n      pomoToday: stats.pomoToday + newPomodoro,\r\n      secWeek: stats.secWeek + newSeconds,\r\n      pomoWeek: stats.pomoWeek + newPomodoro,\r\n      secMonth: stats.secMonth + newSeconds,\r\n      pomoMonth: stats.pomoMonth + newPomodoro,\r\n    });\r\n\r\n    let textPomodoro = newPomodoro ? \"true\" : \"false\";\r\n\r\n    //Send new record of time.\r\n    fetch(\"/sendRecord\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ time: newSeconds, pomodoro: textPomodoro }),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((message) => {})\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  //Calculating next session according to pomodoro standard\r\n  //and present session\r\n  const checkNextForSession = () => {\r\n    if (mode === \"pomodoro\") {\r\n      if (cycles < 3) {\r\n        setMode(\"break\");\r\n        defineModeLabel(\"break\");\r\n        setCycles((cycles) => cycles + 1);\r\n      } else {\r\n        setMode(\"long-break\");\r\n        defineModeLabel(\"long-break\");\r\n        setCycles(0);\r\n      }\r\n    } else {\r\n      setMode(\"pomodoro\");\r\n      defineModeLabel(\"pomodoro\");\r\n    }\r\n    setSessionOver(false);\r\n  };\r\n\r\n  const timerReseted = () => {\r\n    setResetTimer(false);\r\n  };\r\n\r\n  const defineModeLabel = (mode) => {\r\n    switch (mode) {\r\n      case \"pomodoro\":\r\n        setModeLabel(\"Pomodoro\");\r\n        break;\r\n      case \"break\":\r\n        setModeLabel(\"Break\");\r\n        break;\r\n      case \"long-break\":\r\n        setModeLabel(\"Long Break\");\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={{ offset: 2 }}>\r\n          <Timer\r\n            isRunning={isTimerRunning}\r\n            resetTimer={resetTimer}\r\n            resetValue={nextMinutes}\r\n            resetedFunc={timerReseted}\r\n            sessionOver={sessionOver}\r\n            setSessionOver={setSessionOver}\r\n            mode={mode}\r\n            minutes={minutes}\r\n            setMinutes={setMinutes}\r\n            seconds={seconds}\r\n            setSeconds={setSeconds}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ offset: 1 }}>\r\n          {sessionOver ? (\r\n            <h3 className=\"text-danger\">{modeLabel} session finished.</h3>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ offset: 2 }}>\r\n          <ControlButtons\r\n            updateState={changeTimerState}\r\n            sessionState={sessionState}\r\n            resetContinue={resetContinue}\r\n            setResetContinue={setResetContinue}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ offset: 2 }}>\r\n          <TextInputs\r\n            changeMode={changeMode}\r\n            mode={mode}\r\n            setNextTimer={setNextMinutes}\r\n            setResetTimer={setResetTimer}\r\n            checkTextInput={checkTextInput}\r\n            setCheckTextInput={setCheckTextInput}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MainApp;\r\n","import { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Stats from \"./components/Stats\";\nimport MainSection from \"./components/MainSection\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction App() {\n  const [userState, setUserState] = useState(\"login\");\n  const [userName, setUserName] = useState(\"\");\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [stats, setStats] = useState({\n    secToday: 0,\n    pomoToday: 0,\n    secWeek: 0,\n    pomoWeek: 0,\n    secMonth: 0,\n    pomoMonth: 0,\n  });\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col xl={4} md={3}></Col>\n        <Col xl={5} md={6} style={{ marginTop: \"25vh\" }}>\n          <MainSection\n            userState={userState}\n            minutes={minutes}\n            setMinutes={setMinutes}\n            seconds={seconds}\n            setSeconds={setSeconds}\n            stats={stats}\n            setStats={setStats}\n          />\n        </Col>\n        <Col xl={2} md={3} style={{ marginTop: \"10vh\" }}>\n          {userState === \"login\" && (\n            <Login\n              stateToRegister={() => setUserState(\"register\")}\n              stateToStats={() => setUserState(\"stats\")}\n              setUserName={setUserName}\n            />\n          )}\n          {userState === \"register\" && (\n            <Register\n              stateToStats={() => setUserState(\"stats\")}\n              stateToLogin={() => setUserState(\"login\")}\n            />\n          )}\n          {userState === \"stats\" && (\n            <Stats\n              userName={userName}\n              setUserName={setUserName}\n              stats={stats}\n              stateToLogin={() => setUserState(\"login\")}\n              setStats={setStats}\n            />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}