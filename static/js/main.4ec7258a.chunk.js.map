{"version":3,"sources":["components/Login.js","components/Register.js","components/Stats.js","components/useInterval.js","assets/sounds/alarm_sound.mp3","components/MainApp/Timer.js","components/MainApp/ControlButtons.js","components/MainApp/ControlInput.js","components/MainApp/TextInputs.js","assets/sounds/click.mp3","components/MainSection.js","App.js","reportWebVitals.js","index.js"],"names":["formReducer","state","event","name","value","Login","useReducer","user_id","password","formData","setFormData","useState","errorMessage","setErrorMessage","history","useHistory","sendLoginRequest","fetch","process","method","headers","body","JSON","stringify","credentials","then","response","text","message","push","console","log","catch","error","handleChange","target","className","Form","onSubmit","preventDefault","Group","controlId","Label","Control","onChange","type","placeholder","style","position","Button","variant","boxShadow","color","paddingBottom","borderBottom","onClick","to","bottom","right","Register","showProblem","setShowProblem","problemText","setProblemText","username","email","search","renderHours","hours","hourString","toString","Stats","stats","setStats","problemPresent","setProblemPresent","today","week","month","minutes","setMinutes","setHours","useEffect","isMounted","dayjs","format","res","ok","json","resJSON","Math","floor","secToday","secWeek","secMonth","pomoToday","pomoWeek","pomoMonth","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","Timer","isRunning","resetTimer","resetValue","resetedFunc","sessionOver","setSessionOver","mode","seconds","setSeconds","alarmSound","play","titleString","document","title","renderTime","Audio","alarmFile","number","ControlButtons","updateState","sessionState","resetContinue","setResetContinue","controlText","setControlText","setControlState","newState","border","ControlInput","changeMode","radioName","inputName","inputValue","setInputValue","inputChecked","invalidInput","setInvalidInput","width","display","checked","e","inputNumber","Number","isNaN","isInteger","validAndSaveInput","size","TextInputs","setNextTimer","setResetTimer","checkTextInput","setCheckTextInput","pomodoroText","setPomodoroText","breakText","setBreakText","longBreakText","setLongBreakText","pomodoro","break","longBreak","radioValues","setRadioValues","invalidPomoInput","setInvalidPomoInput","invalidBreakInput","setInvalidBreakInput","invalidLongInput","setInvalidLongInput","parseInt","withRouter","location","nextMinutes","setNextMinutes","setMode","isTimerRunning","setIsTimerRunning","setSessionState","cycles","setCycles","modeLabel","setModeLabel","clickSound","clickFile","updateTodayStats","newSeconds","newPomodoro","textPomodoro","time","date","checkNextForSession","defineModeLabel","Container","fluid","Row","Col","md","offset","pathname","newMode","App","userName","setUserName","err","xl","marginTop","path","MainSection","height","marginLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ec7258a.chunk.js","sourcesContent":["import React, { useReducer, useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nconst formReducer = (state, event) => {\r\n  return {\r\n    ...state,\r\n    [event.name]: event.value,\r\n  };\r\n};\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useReducer(formReducer, {\r\n    user_id: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  //Send login request\r\n\r\n  function sendLoginRequest() {\r\n    const domain = process.env.REACT_APP_BACKEND_URL || \"\";\r\n    fetch(`${domain}/login`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(formData),\r\n      credentials: \"include\",\r\n    })\r\n      //Check response and set error message or stats component\r\n      .then((response) => {\r\n        return response.text();\r\n      })\r\n      .then((message) => {\r\n        if (message === \"User logged in\") {\r\n          history.push(\"/stats\");\r\n          setErrorMessage(\"\");\r\n        } else {\r\n          console.log(\"🚀 ~ file: Login.js ~ line 35 ~ message\", message);\r\n          setErrorMessage(message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(\"Couldn't log in.\");\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  //Send login request when Login form is submitted.\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    sendLoginRequest();\r\n  }\r\n\r\n  //Send login request with demo data\r\n\r\n  function sendDemoLogin() {\r\n    setFormData (() => {\r\n      return {\r\n        user_id: \"user\",\r\n        password: \"1234\",\r\n      };\r\n    });\r\n    sendLoginRequest();\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      name: event.target.name,\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"mb-4\">Login</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"EmailUsername\">\r\n          <Form.Label>Username/Email</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            value={formData.user_id}\r\n            name=\"user_id\"\r\n            type=\"text\"\r\n            placeholder=\"Enter username or email\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"LoginPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            value={formData.password}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </Form.Group>\r\n        <p className=\"text-danger font-weight-bold\">{errorMessage}</p>\r\n        <div style={{ position: \"relative\" }}>\r\n          <Button variant=\"primary\" type=\"submit\" style={{ boxShadow: \"none\" }}>\r\n            Login\r\n          </Button>\r\n          <Button variant=\"link\" style={{color: \"darkslategray\", paddingBottom: \"0px\", borderBottom: \"0px\"}} onClick={sendDemoLogin}>Demo</Button> \r\n          <Link\r\n            to=\"/register\"\r\n            style={{\r\n              boxShadow: \"none\",\r\n              position: \"absolute\",\r\n              bottom: 5,\r\n              right: 0,\r\n              color: \"darkslategray\",\r\n            }}\r\n          >\r\n            Register\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useState, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, event) => {\r\n  return {\r\n    ...state,\r\n    [event.name]: event.value,\r\n  };\r\n};\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useReducer(formReducer, {});\r\n  const [showProblem, setShowProblem] = useState(false);\r\n  const [problemText, setProblemText] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  //Send register request when Register form is submitted.\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    //Check all fields are filled\r\n    if (formData.password && formData.username && formData.email) {\r\n      const domain = process.env.REACT_APP_BACKEND_URL || \"\";\r\n      fetch(`${domain}/register`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData),\r\n        credentials: \"include\",\r\n      })\r\n        .then((response) => response.text())\r\n        .then((message) => {\r\n          if (message === \"User registered.\") {\r\n            console.log(\"🚀 ~ file: Register.js ~ line 28 ~ message\", message);\r\n            setShowProblem(false);\r\n            history.push(\"/stats\");\r\n          } else {\r\n            console.log(\"🚀 ~ file: Register.js ~ line 28 ~ message\", message);\r\n            //Check if the error was related to unique rule.\r\n            if (message.search(/unique/) > -1) {\r\n              setProblemText(\"Username or email already exists.\");\r\n            } else {\r\n              setProblemText(message);\r\n            }\r\n            setShowProblem(true);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"🚀 ~ file: Register.js ~ line 35 ~ error\", error);\r\n          setShowProblem(true);\r\n        });\r\n    } else {\r\n      setProblemText(\"Missing field in register form.\");\r\n      setShowProblem(true);\r\n    }\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({\r\n      name: event.target.name,\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"mb-4\">Register</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"Username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            value={formData.username}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Type a username\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"Email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            value={formData.email}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Type your email\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"Password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            onChange={handleChange}\r\n            value={formData.password}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Type a password\"\r\n          />\r\n        </Form.Group>\r\n        {showProblem && (\r\n          <p className=\"text-danger font-weight-bold\">{problemText}</p>\r\n        )}\r\n        <div style={{ position: \"relative\" }}>\r\n          <Button variant=\"primary\" type=\"submit\" style={{ boxShadow: \"none\" }}>\r\n            Register\r\n          </Button>\r\n          <Link\r\n            to=\"/login\"\r\n            style={{\r\n              boxShadow: \"none\",\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              right: 0,\r\n              color: \"darkslategray\",\r\n            }}\r\n          >\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport { useEffect, useState } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n//Render string to display hours.\r\nconst renderHours = (hours) => {\r\n  let hourString = \"\";\r\n  if (hours > 0) {\r\n    hourString = hours.toString() + \" hr\";\r\n    if (hours > 1) {\r\n      hourString += \"s\";\r\n    }\r\n    hourString += \". \";\r\n  }\r\n\r\n  return hourString;\r\n};\r\n\r\nconst Stats = ({ stats, setStats }) => {\r\n  const [problemText, setProblemText] = useState(\"\");\r\n  const [problemPresent, setProblemPresent] = useState(false);\r\n  const history = useHistory();\r\n  const [minutes, setMinutes] = useState({ today: 0, week: 0, month: 0 });\r\n  const [hours, setHours] = useState({ today: 0, week: 0, month: 0 });\r\n\r\n  // Send main stats request in first render and save it in stats state.\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const domain = process.env.REACT_APP_BACKEND_URL || \"\";\r\n    fetch(`${domain}/main-stats?date=${dayjs().format(\"YYYY-MM-DD\")}`, {\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          return res.text();\r\n        }\r\n      })\r\n      .then((resJSON) => {\r\n        if (isMounted) {\r\n          setStats(() => resJSON);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setProblemText(\"Sorry. There was a problem getting the stats.\");\r\n        console.log(error);\r\n        setProblemPresent(true);\r\n      });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //Calculate hours and minutes for each category\r\n    setHours({\r\n      today: Math.floor(stats.secToday / 3600),\r\n      week: Math.floor(stats.secWeek / 3600),\r\n      month: Math.floor(stats.secMonth / 3600),\r\n    });\r\n    setMinutes({\r\n      today: Math.floor((stats.secToday / 60) % 60),\r\n      week: Math.floor((stats.secWeek / 60) % 60),\r\n      month: Math.floor((stats.secMonth / 60) % 60),\r\n    });\r\n  }, [stats.secToday, stats.secWeek, stats.secMonth]);\r\n\r\n  //Send logout request to delete session token in backend and go to /login\r\n  const logout = () => {\r\n    const domain = process.env.REACT_APP_BACKEND_URL || \"\";\r\n    fetch(`${domain}/logout`, {\r\n      method: \"DELETE\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => response.text())\r\n      .then((message) => {\r\n        if (message === \"Session finished.\") {\r\n          setProblemText(\"\");\r\n          setProblemPresent(false);\r\n          history.push(\"/login\");\r\n        } else {\r\n          setProblemPresent(true);\r\n          setProblemText(\"Sorry. Couldn't log out.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setProblemPresent(true);\r\n        setProblemText(\"Sorry. Couldn't log out.\");\r\n        console.error(\r\n          \"🚀 ~ file: Register.js ~ line 35 ~ error\",\r\n          error.message\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"mb-1 mt-xl-5 font-weight-bold\" style={{color: \"saddlebrown\"}}>Stats</h2>\r\n      {!problemPresent && stats.username ? (\r\n        <h3 className=\"mb-3\">Hello, {stats.username}.</h3>\r\n      ) : null}\r\n      <p className=\"text-danger font-weight-bold\">\r\n        {problemPresent ? problemText : \"\"}\r\n      </p>\r\n      <h4>Today.</h4>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Pomodoros: </span>\r\n        <span>{stats.pomoToday}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Time: </span>\r\n        <span>\r\n          {renderHours(hours.today)}\r\n          {minutes.today} min.\r\n        </span>\r\n      </div>\r\n      <h4 className=\"mt-3\">This week.</h4>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Pomodoros: </span>\r\n        <span>{stats.pomoWeek}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Time: </span>\r\n        <span>\r\n          {renderHours(hours.week)}\r\n          {minutes.week} min.\r\n        </span>\r\n      </div>\r\n      <h4 className=\"mt-3\">This month.</h4>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Pomodoros: </span>\r\n        <span>{stats.pomoMonth}</span>\r\n      </div>\r\n      <div>\r\n        <span className=\"font-weight-bold\">Time: </span>\r\n        <span>\r\n          {renderHours(hours.month)}\r\n          {minutes.month} min.\r\n        </span>\r\n      </div>\r\n      <Button\r\n        variant=\"outline-secondary\"\r\n        className=\"btn-sm mt-3 float-right\"\r\n        style={{ boxShadow: \"none\" }}\r\n        onClick={logout}\r\n      >\r\n        Logout\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval;\r\n","export default __webpack_public_path__ + \"static/media/alarm_sound.b2009aa7.mp3\";","import useInterval from \"../useInterval\";\r\nimport { useEffect } from \"react\";\r\nimport alarmFile from \"../../assets/sounds/alarm_sound.mp3\";\r\n\r\nconst Timer = ({\r\n  isRunning,\r\n  resetTimer,\r\n  resetValue,\r\n  resetedFunc,\r\n  sessionOver,\r\n  setSessionOver,\r\n  mode,\r\n  minutes,\r\n  seconds,\r\n  setMinutes,\r\n  setSeconds,\r\n}) => {\r\n  useInterval(updateTimer, isRunning ? 1000 : null);\r\n\r\n  //Update page title with session name and time\r\n  useEffect(() => {\r\n    let titleString = ``;\r\n    if (!sessionOver) {\r\n      switch (mode) {\r\n        case \"pomodoro\":\r\n          titleString += \"Pomodoro - \";\r\n          break;\r\n        case \"break\":\r\n          titleString += \"Break - \";\r\n          break;\r\n        case \"long-break\":\r\n          titleString += \"Long Break - \";\r\n          break;\r\n        default:\r\n      }\r\n    } else {\r\n      titleString += \"Extra - \";\r\n    }\r\n    document.title =\r\n      titleString + `${renderTime(minutes)}:${renderTime(seconds)}`;\r\n    // eslint-disable-next-line\r\n  }, [minutes, seconds, mode]);\r\n\r\n  // If resetTimer flag set, reset timer and clear flag\r\n  useEffect(() => {\r\n    if (resetTimer) {\r\n      setMinutes(resetValue);\r\n      setSeconds(0);\r\n      resetedFunc();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [resetTimer]);\r\n\r\n  const alarmSound = new Audio(alarmFile);\r\n\r\n  // Update timer function for normal section and extra section.\r\n  function updateTimer() {\r\n    if (!sessionOver) {\r\n      if (seconds > 0) {\r\n        setSeconds((seconds) => seconds - 1);\r\n      } else if (minutes > 0) {\r\n        setSeconds(59);\r\n        setMinutes((minutes) => minutes - 1);\r\n      } else {\r\n        console.log(\"Setting extra state\");\r\n        setSessionOver(true);\r\n        alarmSound.play();\r\n      }\r\n      //Update minutes and secods if session ended.\r\n    } else {\r\n      if (seconds < 59) {\r\n        setSeconds(seconds + 1);\r\n      } else if (minutes < 60) {\r\n        setSeconds(0);\r\n        setMinutes(minutes + 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Convert to string and add leading zero\r\n  const renderTime = (number) => {\r\n    let numString = \"\";\r\n    if (number < 10) {\r\n      numString = \"0\" + number.toString();\r\n    } else {\r\n      numString = number.toString();\r\n    }\r\n    return numString;\r\n  };\r\n\r\n  return (\r\n    <div className=\"display-2 font-weight-bold mb-2\">\r\n      {renderTime(minutes)}:{renderTime(seconds)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import { useState, useEffect } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nfunction ControlButtons({\r\n  updateState,\r\n  sessionState,\r\n  resetContinue,\r\n  setResetContinue,\r\n}) {\r\n  const [controlText, setControlText] = useState(\"Stop\");\r\n\r\n  useEffect(() => {\r\n    if (resetContinue) {\r\n      setControlText(\"Stop\");\r\n      setResetContinue(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [resetContinue]);\r\n\r\n  // Change state of timer\r\n  const setControlState = (newState) => {\r\n    if (sessionState !== \"wait\") {\r\n      setControlText(newState);\r\n      if (newState === \"Continue\") {\r\n        updateState(\"stop\");\r\n      } else {\r\n        updateState(\"continue\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"ml-3\">\r\n      <Button\r\n        variant=\"secondary\"\r\n        className=\"mr-2\"\r\n        style={{ border: \"1px solid black\", boxShadow: \"none\" }}\r\n        onClick={() => updateState(\"run\")}\r\n      >\r\n        Start\r\n      </Button>\r\n      <Button\r\n        variant=\"secondary\"\r\n        className=\"mr-2\"\r\n        style={{ border: \"1px solid black\", boxShadow: \"none\" }}\r\n        onClick={() =>\r\n          controlText === \"Stop\"\r\n            ? setControlState(\"Continue\")\r\n            : setControlState(\"Stop\")\r\n        }\r\n      >\r\n        {controlText}\r\n      </Button>\r\n      <Button\r\n        variant=\"secondary\"\r\n        className=\"mr-2\"\r\n        style={{ border: \"1px solid black\", boxShadow: \"none\" }}\r\n        onClick={() => updateState(\"wait\")}\r\n      >\r\n        End\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlButtons;\r\n","function ControlInput({\r\n  changeMode,\r\n  radioName,\r\n  inputName,\r\n  inputValue,\r\n  setInputValue,\r\n  inputChecked,\r\n  invalidInput,\r\n  setInvalidInput,\r\n}) {\r\n  \r\n  //Determine if input is valid when input is active.\r\n  const validAndSaveInput = (e) => {\r\n    if (inputChecked) {\r\n      let inputNumber = Number(e.target.value);\r\n      if (isNaN(inputNumber)) {\r\n        setInvalidInput(true);\r\n        //Check if in range and number is integer\r\n      } else if (inputNumber > 0 && inputNumber < 60) {\r\n        if (Number.isInteger(inputNumber)) {\r\n          setInvalidInput(false);\r\n        } else {\r\n          setInvalidInput(true);\r\n        }\r\n      } else {\r\n        setInvalidInput(true);\r\n      }\r\n      setInputValue(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <span style={{ width: \"110px\", display: \"inline-block\" }}>\r\n        <input\r\n          type=\"radio\"\r\n          className=\"mr-1\"\r\n          id={radioName}\r\n          name=\"session-type\"\r\n          value={radioName}\r\n          onClick={() => changeMode(radioName)}\r\n          checked={inputChecked}\r\n        ></input>\r\n        <label className=\"input-label\">{inputName}</label>\r\n      </span>\r\n      <input\r\n        className=\"input-field\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={(e) => validAndSaveInput(e)}\r\n        size=\"5\"\r\n      />\r\n      <span> min</span>\r\n      {invalidInput ? (\r\n        <span className=\"ml-2 text-danger font-weight-bold\">Invalid Input</span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ControlInput;\r\n","import React from \"react\";\r\nimport ControlInput from \"./ControlInput\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction TextInputs({\r\n  changeMode,\r\n  mode,\r\n  setNextTimer,\r\n  setResetTimer,\r\n  checkTextInput,\r\n  setCheckTextInput,\r\n}) {\r\n  const [pomodoroText, setPomodoroText] = useState(\"25\");\r\n  const [breakText, setBreakText] = useState(\"5\");\r\n  const [longBreakText, setLongBreakText] = useState(\"15\");\r\n  const [radioValues, setRadioValues] = useState({\r\n    pomodoro: true,\r\n    break: false,\r\n    longBreak: false,\r\n  });\r\n  const [invalidPomoInput, setInvalidPomoInput] = useState(false);\r\n  const [invalidBreakInput, setInvalidBreakInput] = useState(false);\r\n  const [invalidLongInput, setInvalidLongInput] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //If mode is updated by program change radio input selected.\r\n    switch (mode) {\r\n      case \"pomodoro\":\r\n        setRadioValues({ pomodoro: true, break: false, longBreak: false });\r\n        //If invalid input -> set default value, else read value\r\n        if (invalidPomoInput) {\r\n          setNextTimer(25);\r\n        } else {\r\n          setNextTimer(parseInt(pomodoroText));\r\n        }\r\n        break;\r\n      case \"break\":\r\n        setRadioValues({ pomodoro: false, break: true, longBreak: false });\r\n        if (invalidBreakInput) {\r\n          setNextTimer(5);\r\n        } else {\r\n          setNextTimer(parseInt(breakText));\r\n        }\r\n        break;\r\n      case \"long-break\":\r\n        setRadioValues({ pomodoro: false, break: false, longBreak: true });\r\n        if (invalidLongInput) {\r\n          setNextTimer(15);\r\n        } else {\r\n          setNextTimer(parseInt(longBreakText));\r\n        }\r\n        break;\r\n      default:\r\n    }\r\n    setCheckTextInput(false);\r\n    if (checkTextInput) {\r\n      setResetTimer(true);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [mode, checkTextInput]);\r\n\r\n  return (\r\n    <div className=\"mt-5\">\r\n      <ControlInput\r\n        changeMode={changeMode}\r\n        radioName=\"pomodoro\"\r\n        inputName=\"Pomodoro\"\r\n        inputValue={pomodoroText}\r\n        setInputValue={setPomodoroText}\r\n        inputChecked={radioValues.pomodoro}\r\n        invalidInput={invalidPomoInput}\r\n        setInvalidInput={setInvalidPomoInput}\r\n      />\r\n      <ControlInput\r\n        changeMode={changeMode}\r\n        radioName=\"break\"\r\n        inputName=\"Break\"\r\n        inputValue={breakText}\r\n        setInputValue={setBreakText}\r\n        inputChecked={radioValues.break}\r\n        invalidInput={invalidBreakInput}\r\n        setInvalidInput={setInvalidBreakInput}\r\n      />\r\n      <ControlInput\r\n        changeMode={changeMode}\r\n        radioName=\"long-break\"\r\n        inputName=\"Long Break\"\r\n        inputValue={longBreakText}\r\n        setInputValue={setLongBreakText}\r\n        inputChecked={radioValues.longBreak}\r\n        invalidInput={invalidLongInput}\r\n        setInvalidInput={setInvalidLongInput}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextInputs;\r\n","export default __webpack_public_path__ + \"static/media/click.07b2086f.mp3\";","import Timer from \"./MainApp/Timer\";\r\nimport ControlButtons from \"./MainApp/ControlButtons\";\r\nimport TextInputs from \"./MainApp/TextInputs\";\r\nimport { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport clickFile from \"../assets/sounds/click.mp3\";\r\nimport dayjs from \"dayjs\";\r\n\r\nfunction MainApp({\r\n  location,\r\n  minutes,\r\n  seconds,\r\n  setMinutes,\r\n  setSeconds,\r\n  stats,\r\n  setStats,\r\n}) {\r\n  const [nextMinutes, setNextMinutes] = useState(25);\r\n  const [mode, setMode] = useState(\"pomodoro\");\r\n  const [resetTimer, setResetTimer] = useState(true);\r\n  const [checkTextInput, setCheckTextInput] = useState(false);\r\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  const [sessionState, setSessionState] = useState(\"wait\");\r\n  const [sessionOver, setSessionOver] = useState(false);\r\n  const [cycles, setCycles] = useState(0);\r\n  const [resetContinue, setResetContinue] = useState(false);\r\n  const [modeLabel, setModeLabel] = useState(\"Pomodoro\");\r\n\r\n  const clickSound = new Audio(clickFile);\r\n\r\n  // Update session mode and next initial time.\r\n\r\n  const changeMode = (newMode) => {\r\n    if (sessionState === \"wait\") {\r\n      setMode(newMode);\r\n      defineModeLabel(newMode);\r\n    }\r\n  };\r\n\r\n  // Change sessionState according to new state\r\n\r\n  const changeTimerState = (newState) => {\r\n    switch (newState) {\r\n      case \"run\":\r\n        if (sessionState === \"wait\") {\r\n          setCheckTextInput(true);\r\n          setIsTimerRunning(true);\r\n          setSessionState(newState);\r\n          clickSound.play();\r\n        }\r\n        break;\r\n      case \"continue\":\r\n        if (sessionState === \"stop\") {\r\n          setIsTimerRunning(true);\r\n          setSessionState(newState);\r\n          clickSound.play();\r\n        }\r\n        break;\r\n      case \"stop\":\r\n        if (sessionState === \"run\" || sessionState === \"continue\") {\r\n          setIsTimerRunning(false);\r\n          setSessionState(newState);\r\n          clickSound.play();\r\n        }\r\n        break;\r\n      case \"wait\":\r\n        if (sessionState !== \"wait\") {\r\n          setIsTimerRunning(false);\r\n          if (sessionState === \"stop\") {\r\n            setResetContinue(true);\r\n          }\r\n\r\n          //Update today stats and save it to backend.\r\n          if (mode === \"pomodoro\" && location.pathname === \"/stats\") {\r\n            updateTodayStats();\r\n          }\r\n\r\n          //Check if a session change is necessary\r\n          if (sessionOver || mode !== \"pomodoro\") {\r\n            checkNextForSession();\r\n          }\r\n          setCheckTextInput(true);\r\n          clickSound.play();\r\n          setSessionState(newState);\r\n        }\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const updateTodayStats = () => {\r\n    let newSeconds = 0;\r\n    let newPomodoro = 0;\r\n\r\n    //Calculate new seconds to adding depending if session was in extra or not.\r\n    if (sessionOver) {\r\n      newSeconds = (nextMinutes + minutes) * 60 + seconds;\r\n      newPomodoro = 1;\r\n    } else {\r\n      newSeconds = (nextMinutes - minutes - 1) * 60 + (60 - seconds);\r\n    }\r\n\r\n    let textPomodoro = newPomodoro ? \"true\" : \"false\";\r\n\r\n    //Send new record of time.\r\n    const domain = process.env.REACT_APP_BACKEND_URL || \"\";\r\n    fetch(`${domain}/sendRecord`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        time: newSeconds,\r\n        pomodoro: textPomodoro,\r\n        date: dayjs().format(\"YYYY-MM-DD\"),\r\n      }),\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          //Update stats state adding new data\r\n          setStats({\r\n            ...stats,\r\n            secToday: stats.secToday + newSeconds,\r\n            pomoToday: stats.pomoToday + newPomodoro,\r\n            secWeek: stats.secWeek + newSeconds,\r\n            pomoWeek: stats.pomoWeek + newPomodoro,\r\n            secMonth: stats.secMonth + newSeconds,\r\n            pomoMonth: stats.pomoMonth + newPomodoro,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  //Calculating next session according to pomodoro standard\r\n  //and set session\r\n  const checkNextForSession = () => {\r\n    if (mode === \"pomodoro\") {\r\n      if (cycles < 3) {\r\n        setMode(\"break\");\r\n        defineModeLabel(\"break\");\r\n        setCycles((cycles) => cycles + 1);\r\n      } else {\r\n        setMode(\"long-break\");\r\n        defineModeLabel(\"long-break\");\r\n        setCycles(0);\r\n      }\r\n    } else {\r\n      setMode(\"pomodoro\");\r\n      defineModeLabel(\"pomodoro\");\r\n    }\r\n    setSessionOver(false);\r\n  };\r\n\r\n  const timerReseted = () => {\r\n    setResetTimer(false);\r\n  };\r\n\r\n  const defineModeLabel = (mode) => {\r\n    switch (mode) {\r\n      case \"pomodoro\":\r\n        setModeLabel(\"Pomodoro\");\r\n        break;\r\n      case \"break\":\r\n        setModeLabel(\"Break\");\r\n        break;\r\n      case \"long-break\":\r\n        setModeLabel(\"Long Break\");\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md={{ offset: 2 }}>\r\n          <Timer\r\n            isRunning={isTimerRunning}\r\n            resetTimer={resetTimer}\r\n            resetValue={nextMinutes}\r\n            resetedFunc={timerReseted}\r\n            sessionOver={sessionOver}\r\n            setSessionOver={setSessionOver}\r\n            mode={mode}\r\n            minutes={minutes}\r\n            setMinutes={setMinutes}\r\n            seconds={seconds}\r\n            setSeconds={setSeconds}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ offset: 1 }}>\r\n          {sessionOver ? (\r\n            <h3 className=\"text-danger\">{modeLabel} session finished.</h3>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ offset: 2 }}>\r\n          <ControlButtons\r\n            updateState={changeTimerState}\r\n            sessionState={sessionState}\r\n            resetContinue={resetContinue}\r\n            setResetContinue={setResetContinue}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={{ offset: 2 }}>\r\n          <TextInputs\r\n            changeMode={changeMode}\r\n            mode={mode}\r\n            setNextTimer={setNextMinutes}\r\n            setResetTimer={setResetTimer}\r\n            checkTextInput={checkTextInput}\r\n            setCheckTextInput={setCheckTextInput}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default withRouter(MainApp);\r\n","import { useState, useEffect } from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Stats from \"./components/Stats\";\r\nimport MainSection from \"./components/MainSection\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport dayjs from \"dayjs\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [stats, setStats] = useState({\r\n    secToday: 0,\r\n    pomoToday: 0,\r\n    secWeek: 0,\r\n    pomoWeek: 0,\r\n    secMonth: 0,\r\n    pomoMonth: 0,\r\n  });\r\n\r\n  //Send request to check if cookie exists with open session \r\n  //and sign in if so, else go to login\r\n  \r\n  useEffect(() => {\r\n    console.log(\"Current date:\", dayjs().format());\r\n    const domain = process.env.REACT_APP_BACKEND_URL || \"\";\r\n    fetch(`${domain}/checkCookie`, {\r\n      credentials: \"include\",\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          history.push(\"/stats\");\r\n        } else {\r\n          console.log(\"🚀 ~ file: App.js ~ line 34 ~ response.ok\", response.ok);\r\n          history.push(\"/login\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"🚀 ~ file: App.js ~ line 40 ~ err\", err);\r\n        history.push(\"/login\");\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col xl={4} md={3}></Col>\r\n        <Col xl={5} md={6} style={{ marginTop: \"25vh\" }}>\r\n          <Route path=\"/\">\r\n            <MainSection\r\n              minutes={minutes}\r\n              setMinutes={setMinutes}\r\n              seconds={seconds}\r\n              setSeconds={setSeconds}\r\n              stats={stats}\r\n              setStats={setStats}\r\n            />\r\n          </Route>\r\n        </Col>\r\n\r\n        <Col\r\n          xl={2}\r\n          md={3}\r\n          style={{ marginTop: \"10vh\" }}\r\n        >\r\n          <Switch>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <Register />\r\n            </Route>\r\n            <Route path=\"/stats\">\r\n              <Stats\r\n                userName={userName}\r\n                setUserName={setUserName}\r\n                stats={stats}\r\n                setStats={setStats}\r\n              />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#484646\"\r\n                height={100}\r\n                width={100}\r\n                style={{ marginTop: \"50%\", marginLeft: \"20px\" }}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}